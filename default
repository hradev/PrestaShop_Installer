##
# You should look at the following URL's in order to grasp a solid understanding
# of Nginx configuration files in order to fully unleash the power of Nginx.
# https://www.nginx.com/resources/wiki/start/
# https://www.nginx.com/resources/wiki/start/topics/tutorials/config_pitfalls/
# https://wiki.debian.org/Nginx/DirectoryStructure
#
# In most cases, administrators will remove this file from sites-enabled/ and
# leave it as reference inside of sites-available where it will continue to be
# updated by the nginx packaging team.
#
# This file will automatically load configuration files provided by other
# applications, such as Drupal or Wordpress. These applications will be made
# available underneath a path with that package name, such as /drupal8.
#
# Please see /usr/share/doc/nginx-doc/examples/ for more detailed examples.
##

# Default server configuration
#
server {
	listen 80 default_server;
	listen [::]:80 default_server;

	# SSL configuration
	#
	# listen 443 ssl default_server;
	# listen [::]:443 ssl default_server;
	#
	# Note: You should disable gzip for SSL traffic.
	# See: https://bugs.debian.org/773332
	#
	# Read up on ssl_ciphers to ensure a secure configuration.
	# See: https://bugs.debian.org/765782
	#
	# Self signed certs generated by the ssl-cert package
	# Don't use them in a production server!
	#
	# include snippets/snakeoil.conf;

	root /var/www/html;

	index index.php;

	server_name _;

	access_log /var/log/nginx/example.com-access.log combined;
    	error_log /var/log/nginx/example.com-error.log info;

	# [EDIT] Path to your SSL certificates (take a look at Certbot https://certbot.eff.org).
    	#ssl_certificate /etc/ssl/fullchain.pem;
    	#ssl_certificate_key /etc/ssl/privkey.pem;

	client_max_body_size 16M;
	error_page 404 /index.php?controller=404;



	# Images.
    	rewrite ^/(\d)(-[\w-]+)?/.+\.jpg$ /img/p/$1/$1$2.jpg last;
    	rewrite ^/(\d)(\d)(-[\w-]+)?/.+\.jpg$ /img/p/$1/$2/$1$2$3.jpg last;
    	rewrite ^/(\d)(\d)(\d)(-[\w-]+)?/.+\.jpg$ /img/p/$1/$2/$3/$1$2$3$4.jpg last;
    	rewrite ^/(\d)(\d)(\d)(\d)(-[\w-]+)?/.+\.jpg$ /img/p/$1/$2/$3/$4/$1$2$3$4$5.jpg last;
    	rewrite ^/(\d)(\d)(\d)(\d)(\d)(-[\w-]+)?/.+\.jpg$ /img/p/$1/$2/$3/$4/$5/$1$2$3$4$5$6.jpg last;
    	rewrite ^/(\d)(\d)(\d)(\d)(\d)(\d)(-[\w-]+)?/.+\.jpg$ /img/p/$1/$2/$3/$4/$5/$6/$1$2$3$4$5$6$7.jpg last;
    	rewrite ^/(\d)(\d)(\d)(\d)(\d)(\d)(\d)(-[\w-]+)?/.+\.jpg$ /img/p/$1/$2/$3/$4/$5/$6/$7/$1$2$3$4$5$6$7$8.jpg last;
    	rewrite ^/(\d)(\d)(\d)(\d)(\d)(\d)(\d)(\d)(-[\w-]+)?/.+\.jpg$ /img/p/$1/$2/$3/$4/$5/$6/$7/$8/$1$2$3$4$5$6$7$8$9.jpg last;
    	rewrite ^/c/([\w.-]+)/.+\.jpg$ /img/c/$1.jpg last;

    	# AlphaImageLoader for IE and FancyBox.
    	rewrite ^images_ie/?([^/]+)\.(gif|jpe?g|png)$ js/jquery/plugins/fancybox/images/$1.$2 last;

    	# Web service API.
    	rewrite ^/api/?(.*)$ /webservice/dispatcher.php?url=$1 last;

    	# Installation sandbox.
    	rewrite ^(/install(?:-dev)?/sandbox)/.* /$1/test.php last;

    	location / {
            try_files $uri $uri/ /index.php$is_args$args;
    	}

    	# [EDIT] Replace 'admin-dev' in this block with the name of your admin directory.
    	location /admin-dev/ {
            try_files $uri $uri/ /admin-dev/index.php$is_args$args;
    	}


    	# .htaccess, .DS_Store, .htpasswd, etc.
    	location ~ /\. {
            deny all;
    	}

    	# Source code directories.
    	location ~ ^/(app|bin|cache|classes|config|controllers|docs|localization|override|src|tests|tools|translations|var|vendor)/ {
            deny all;
    	}

    	# vendor in modules directory.
        location ~ ^/modules/.*/vendor/ {
            deny all;
    	}

    	# Prevent exposing other sensitive files.
    	location ~ \.(log|tpl|twig|sass|yml)$ {
            deny all;
    	}

    	# Prevent injection of PHP files.
    	location /img {
            location ~ \.php$ { deny all; }
    	}

    	location /upload {
            location ~ \.php$ { deny all; }
    	}

    	location ~ [^/]\.php(/|$) {
            # Split $uri to $fastcgi_script_name and $fastcgi_path_info.
            fastcgi_split_path_info ^(.+?\.php)(/.*)$;

            # Ensure that the requested PHP script exists before passing it
            # to the PHP-FPM.
            try_files $fastcgi_script_name =404;

            # Environment variables for PHP.
            include fastcgi_params;
            fastcgi_param SCRIPT_FILENAME $request_filename;

            fastcgi_index index.php;

            fastcgi_keep_conn on;
            fastcgi_read_timeout 30s;
            fastcgi_send_timeout 30s;

            # Uncomment these in case of long loading or 502/504 errors.
            # fastcgi_buffer_size 256k;
            # fastcgi_buffers 256 16k;
            # fastcgi_busy_buffers_size 256k;

            # [EDIT] Connection to PHP-FPM unix domain socket.
            fastcgi_pass unix:/var/run/php/php-fpm.sock;
    	}

}


